<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on br</title>
    <link>https://brr.ai/tags/python/</link>
    <description>Recent content in python on br</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 16 Nov 2019 10:01:42 +0100</lastBuildDate>
    
	<atom:link href="https://brr.ai/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A better way to accept Pandas DataFrames as function arguments</title>
      <link>https://brr.ai/posts/dataframe/</link>
      <pubDate>Sat, 16 Nov 2019 10:01:42 +0100</pubDate>
      
      <guid>https://brr.ai/posts/dataframe/</guid>
      <description>A better way to accept Pandas DataFrames as function arguments I recently started working on an existing project that relied on some Python modelling code that uses Pandas. I spent a few days reading through the spaghetti that was the Python model and I noticed a recurring pattern. It looks something like this:
def calculate_kpi( df: pd.DataFrame, df_weights: pd.DataFrame, country: str ) -&amp;gt; pd.DataFrame: df[&amp;#34;sales_volumes&amp;#34;] = sales_volumes(df, df_weights, country) return df.</description>
    </item>
    
    <item>
      <title>A better way to accept Pandas DataFrames as function arguments</title>
      <link>https://brr.ai/pp/dataframe/</link>
      <pubDate>Sat, 16 Nov 2019 10:01:42 +0100</pubDate>
      
      <guid>https://brr.ai/pp/dataframe/</guid>
      <description>A better way to accept Pandas DataFrames as function arguments I recently started working on an existing project that relied on some Python modelling code that uses Pandas. I spent a few days reading through the spaghetti that was the Python model and I noticed a recurring pattern. It looks something like this:
def calculate_kpi( df: pd.DataFrame, df_weights: pd.DataFrame, country: str ) -&amp;gt; pd.DataFrame: df[&amp;#34;sales_volumes&amp;#34;] = sales_volumes(df, df_weights, country) return df.</description>
    </item>
    
  </channel>
</rss>